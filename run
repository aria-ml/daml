#!/bin/bash -e

function showHelp() {
cat << EOF
Usage:
  run <task>

Tasks:
  unit    run unit tests
  func    run functional tests
  type    run typecheck
  lint    run static code analysis
  docs    generate documentation
EOF
exit $1
}

if [ ! -f /.dockerenv ]; then
    echo "Docker container not found. Check to see if you are running in a container."
    exit 1
fi

declare -A supported_tasks=([unit]=1 [func]=1 [type]=1 [lint]=1 [docs]=1)

# validate args
if (( $# != 1 )); then echo Too many parameters; showHelp 1; fi
if [[ ! ${supported_tasks[$1]} ]]; then echo Invalid task; showHelp 1; fi

pver=$(python --version | cut -d' ' -f2 | cut -d'.' -f1-2)
func=""
case $1 in
    "func") func="--runfunctional";&
    "unit") poetry install --only jatic --all-extras
            if [[ -z $CI ]]; then export CUDA_VISIBLE_DEVICES=-1; fi # disable GPU for local test runs - comment out this line to enable
            coverage run --data-file=output/.coverage.$1.$pver --source=daml --branch -m pytest $func --junitxml=output/junit.$1.$pver.xml --verbose --durations=0
            coverage report --data-file=output/.coverage.$1.$pver
            coverage xml --data-file=output/.coverage.$1.$pver --skip-empty -o output/coverage.$1.$pver.xml
            coverage html --data-file=output/.coverage.$1.$pver --skip-empty -d output/htmlcov.$1.$pver
            ;;
    "type") pyright src/ tests/
            pyright --ignoreexternal --verifytypes daml
            ;;
    "lint") black --check --diff .
            flake8
            isort --check --diff .
            codespell
            ;;
    "docs") poetry install --only jatic --all-extras
            export TF_CPP_MIN_LOG_LEVEL=3
            export PYDEVD_DISABLE_FILE_VALIDATION=1
            sphinx-build -M html docs output/docs -j 4
            ;;
esac
