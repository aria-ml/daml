[tool.poetry]
name = "daml"
version = "0" # dynamic
description = "DAML provides a simple interface to characterize image data and its impact on model performance across classification and object-detection tasks"
license = "MIT"
readme = "README.md"
homepage = "https://jatic.pages.jatic.net/aria/daml/"
repository = "https://gitlab.jatic.net/jatic/aria/daml/"

authors = ["ARiA <daml@ariacoustics.com>"]
maintainers = [
  "Andrew Weng <andrew.weng@ariacoustics.com>",
  "James Gleeson <james.gleeson@ariacoustics.com>",
  "Jason Inman <jason.inman@ariacoustics.com>",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering",
  "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
numpy = "1.24.3"
scipy = "*"
scikit-learn = "*"
alibi-detect = {version = "0.11.4", extras = ["tensorflow"], optional = true}
tensorflow = {version = "2.12.1", optional = true}
nvidia-cudnn-cu11 = {version = "8.6.0.163", optional = true}
opencv-contrib-python-headless = {version = "4.8.0.76", optional = true}


[tool.poetry.extras]
alibi-detect = ["alibi-detect", "tensorflow"]
cuda = ["nvidia-cudnn-cu11", "opencv-contrib-python-headless"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# test
pytest = "*"
coverage = "*"
# type
pyright = "*"
# lint
flake8 = "*"
flake8-pyproject = "*"
black = { extras = ["jupyter"], version = "*" }
isort = "*"
codespell = "*"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.pyright]
reportMissingImports = false

[tool.pytest.ini_options]
markers = [
  "functional: marks slower functional tests",
]

[tool.black]
extend-exclude = '\.tox|.*env.*|docs\/'

[tool.isort]
profile = 'black'
skip_glob = [
    ".tox",
    "*env*",
    "docs/*"
    ]

[tool.flake8]
count = true
exclude = [
    ".tox",
    "*env*",
    "docs/*"
    ]
max-line-length = 88

[tool.codespell]
skip = '*env*,./docs/_build,CHANGELOG.md,poetry.lock'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
