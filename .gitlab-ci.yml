# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

.build_env:
  before_script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  before_test_script:
    - !reference [".build_env", "before_script"]
    - pip install tox

stages:
  - test
  - docs
  - build

# test:
#   stage: test
#   script:
#     - pip install tox  # you can also use tox
#     - tox -e test

testcov:
  stage: test
  before_script:
    - !reference [".build_env", "before_test_script"]
  script:
    - tox -e coverage
  artifacts:
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
    - junit.xml
    - coverage.xml

linting:
  stage: test
  before_script:
    - !reference [".build_env", "before_test_script"]
  script:
    - tox -e lint

pages:
  stage: docs
  before_script:
    - pip install sphinx sphinx-rtd-theme
  script:
    - cd docs && make html
  after_script:
    - mv docs/_build/html/ ./public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: build
  script: echo "Define your deployment script!"
  environment: production

include:
- template: Jobs/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
